package sijay.zheng.leetcode.medium;
/**
 题目400：分割数组
<p>给定一个数组<code>nums</code>，将其划分为两个连续子数组<code>left</code>和<code>right</code>，使得：</p>

<ul>
	<li><code>left</code>中的每个元素都小于或等于<code>right</code>中的每个元素。</li>
	<li><code>left</code> 和<code>right</code>都是非空的。</li>
	<li><code>left</code> 的长度要尽可能小。</li>
</ul>

<p><em>在完成这样的分组后返回<code>left</code>的<strong>长度</strong></em>。</p>

<p>用例可以保证存在这样的划分方法。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<strong>输入：</strong>nums = [5,0,3,8,6]
<strong>输出：</strong>3
<strong>解释：</strong>left = [5,0,3]，right = [8,6]
</pre>

<p><strong>示例 2：</strong></p>

<pre>
<strong>输入：</strong>nums = [1,1,1,0,6,12]
<strong>输出：</strong>4
<strong>解释：</strong>left = [1,1,1,0]，right = [6,12]
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>
	<li><code>0 &lt;= nums[i] &lt;= 10<sup>6</sup></code></li>
	<li>可以保证至少有一种方法能够按题目所描述的那样对 <code>nums</code> 进行划分。</li>
</ul>

*/
 class Q400 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int partitionDisjoint(int[] nums) {

    }
}
}
