package sijay.zheng.leetcode.medium;
/**
 题目839：考试的最大困扰度
<p>一位老师正在出一场由 <code>n</code>道判断题构成的考试，每道题的答案为 true （用 <code><span style="">'T'</span></code> 表示）或者 false （用 <code>'F'</code>表示）。老师想增加学生对自己做出答案的不确定性，方法是<strong>最大化</strong>有 <strong>连续相同</strong>结果的题数。（也就是连续出现 true 或者连续出现 false）。</p>

<p>给你一个字符串<code>answerKey</code>，其中<code>answerKey[i]</code>是第 <code>i</code>个问题的正确结果。除此以外，还给你一个整数 <code>k</code>，表示你能进行以下操作的最多次数：</p>

<ul>
	<li>每次操作中，将问题的正确答案改为<code>'T'</code> 或者<code>'F'</code>（也就是将 <code>answerKey[i]</code> 改为<code>'T'</code>或者<code>'F'</code>）。</li>
</ul>

<p>请你返回在不超过 <code>k</code>次操作的情况下，<strong>最大</strong>连续 <code>'T'</code>或者 <code>'F'</code>的数目。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<b>输入：</b>answerKey = "TTFF", k = 2
<b>输出：</b>4
<b>解释：</b>我们可以将两个 'F' 都变为 'T' ，得到 answerKey = "<em><strong>TTTT</strong></em>" 。
总共有四个连续的 'T' 。
</pre>

<p><strong>示例 2：</strong></p>

<pre>
<b>输入：</b>answerKey = "TFFT", k = 1
<b>输出：</b>3
<b>解释：</b>我们可以将最前面的 'T' 换成 'F' ，得到 answerKey = "<em><strong>FFF</strong></em>T" 。
或者，我们可以将第二个 'T' 换成 'F' ，得到 answerKey = "T<em><strong>FFF</strong></em>" 。
两种情况下，都有三个连续的 'F' 。
</pre>

<p><strong>示例 3：</strong></p>

<pre>
<b>输入：</b>answerKey = "TTFTTFTT", k = 1
<b>输出：</b>5
<b>解释：</b>我们可以将第一个 'F' 换成 'T' ，得到 answerKey = "<em><strong>TTTTT</strong></em>FTT" 。
或者我们可以将第二个 'F' 换成 'T' ，得到 answerKey = "TTF<em><strong>TTTTT</strong></em>" 。
两种情况下，都有五个连续的 'T' 。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>n == answerKey.length</code></li>
	<li><code>1 &lt;= n &lt;= 5 * 10<sup>4</sup></code></li>
	<li><code>answerKey[i]</code>要么是<code>'T'</code> ，要么是<code>'F'</code></li>
	<li><code>1 &lt;= k &lt;= n</code></li>
</ul>

*/
 class Q839 {public static void main(String[] args) {}
static class Solution {
    public int maxConsecutiveAnswers(String answerKey, int k) {

    }
}
}
