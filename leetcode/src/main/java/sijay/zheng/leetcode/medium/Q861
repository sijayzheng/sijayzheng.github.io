package sijay.zheng.leetcode.medium;
/**
 题目861：分配给商店的最多商品的最小值
<p>给你一个整数<code>n</code>，表示有<code>n</code>间零售商店。总共有<code>m</code>种产品，每种产品的数目用一个下标从 <strong>0</strong>开始的整数数组<code>quantities</code>表示，其中<code>quantities[i]</code>表示第<code>i</code>种商品的数目。</p>

<p>你需要将 <strong>所有商品</strong>分配到零售商店，并遵守这些规则：</p>

<ul>
	<li>一间商店 <strong>至多</strong>只能有 <strong>一种商品</strong> ，但一间商店拥有的商品数目可以为<strong>任意</strong>件。</li>
	<li>分配后，每间商店都会被分配一定数目的商品（可能为 <code>0</code>件）。用<code>x</code>表示所有商店中分配商品数目的最大值，你希望 <code>x</code>越小越好。也就是说，你想 <strong>最小化</strong>分配给任意商店商品数目的 <strong>最大值</strong>。</li>
</ul>

<p>请你返回最小的可能的<code>x</code>。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<b>输入：</b>n = 6, quantities = [11,6]
<b>输出：</b>3
<strong>解释： </strong>一种最优方案为：
- 11 件种类为 0 的商品被分配到前 4 间商店，分配数目分别为：2，3，3，3 。
- 6 件种类为 1 的商品被分配到另外 2 间商店，分配数目分别为：3，3 。
分配给所有商店的最大商品数目为 max(2, 3, 3, 3, 3, 3) = 3 。
</pre>

<p><strong>示例 2：</strong></p>

<pre>
<b>输入：</b>n = 7, quantities = [15,10,10]
<b>输出：</b>5
<b>解释：</b>一种最优方案为：
- 15 件种类为 0 的商品被分配到前 3 间商店，分配数目为：5，5，5 。
- 10 件种类为 1 的商品被分配到接下来 2 间商店，数目为：5，5 。
- 10 件种类为 2 的商品被分配到最后 2 间商店，数目为：5，5 。
分配给所有商店的最大商品数目为 max(5, 5, 5, 5, 5, 5, 5) = 5 。
</pre>

<p><strong>示例 3：</strong></p>

<pre>
<b>输入：</b>n = 1, quantities = [100000]
<b>输出：</b>100000
<b>解释：</b>唯一一种最优方案为：
- 所有 100000 件商品 0 都分配到唯一的商店中。
分配给所有商店的最大商品数目为 max(100000) = 100000 。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>m == quantities.length</code></li>
	<li><code>1 &lt;= m &lt;= n &lt;= 10<sup>5</sup></code></li>
	<li><code>1 &lt;= quantities[i] &lt;= 10<sup>5</sup></code></li>
</ul>

*/
 class Q861 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int minimizedMaximum(int n, int[] quantities) {

    }
}
}
