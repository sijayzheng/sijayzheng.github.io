package sijay.zheng.leetcode.medium;
/**
 题目65：从前序与中序遍历序列构造二叉树
<p>给定两个整数数组<code>preorder</code> 和 <code>inorder</code>，其中<code>preorder</code> 是二叉树的<strong>先序遍历</strong>， <code>inorder</code>是同一棵树的<strong>中序遍历</strong>，请构造二叉树并返回其根节点。</p>

<p></p>

<p><strong>示例 1:</strong></p>
<img alt="" src="https://assets.leetcode.com/uploads/2021/02/19/tree.jpg" style="height: 302px; width: 277px;" />
<pre>
<strong>输入</strong><strong>:</strong> preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]
<strong>输出:</strong> [3,9,20,null,null,15,7]
</pre>

<p><strong>示例 2:</strong></p>

<pre>
<strong>输入:</strong> preorder = [-1], inorder = [-1]
<strong>输出:</strong> [-1]
</pre>

<p></p>

<p><strong>提示:</strong></p>

<ul>
	<li><code>1 &lt;= preorder.length &lt;= 3000</code></li>
	<li><code>inorder.length == preorder.length</code></li>
	<li><code>-3000 &lt;= preorder[i], inorder[i] &lt;= 3000</code></li>
	<li><code>preorder</code>和<code>inorder</code>均 <strong>无重复</strong> 元素</li>
	<li><code>inorder</code>均出现在<code>preorder</code></li>
	<li><code>preorder</code><strong>保证</strong> 为二叉树的前序遍历序列</li>
	<li><code>inorder</code><strong>保证</strong> 为二叉树的中序遍历序列</li>
</ul>

*/
 class Q65 {public static void main(String[] args) {Solution solution=new Solution();}
//Definition for a binary tree node.
class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;
    TreeNode() {}
    TreeNode(int val) { this.val = val; }
    TreeNode(int val, TreeNode left, TreeNode right) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}
 static class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {

    }
}
}
