package sijay.zheng.leetcode.medium;
/**
 题目125：除自身以外数组的乘积
<p>给你一个整数数组<code>nums</code>，返回 <em>数组<code>answer</code>，其中<code>answer[i]</code>等于<code>nums</code>中除<code>nums[i]</code>之外其余各元素的乘积</em>。</p>

<p>题目数据 <strong>保证</strong> 数组<code>nums</code>之中任意元素的全部前缀元素和后缀的乘积都在 <strong>32 位</strong> 整数范围内。</p>

<p>请<strong>不要使用除法，</strong>且在<code>O(<em>n</em>)</code> 时间复杂度内完成此题。</p>

<p></p>

<p><strong>示例 1:</strong></p>

<pre>
<strong>输入:</strong> nums = <code>[1,2,3,4]</code>
<strong>输出:</strong> <code>[24,12,8,6]</code>
</pre>

<p><strong>示例 2:</strong></p>

<pre>
<strong>输入:</strong> nums = [-1,1,0,-3,3]
<strong>输出:</strong> [0,0,9,0,0]
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>2 &lt;= nums.length &lt;= 10<sup>5</sup></code></li>
	<li><code>-30 &lt;= nums[i] &lt;= 30</code></li>
	<li><strong>保证</strong> 数组<code>nums</code>之中任意元素的全部前缀元素和后缀的乘积都在 <strong>32 位</strong> 整数范围内</li>
</ul>

<p></p>

<p><strong>进阶：</strong>你可以在 <code>O(1)</code>的额外空间复杂度内完成这个题目吗？（ 出于对空间复杂度分析的目的，输出数组<strong>不被视为</strong>额外空间。）</p>

*/
 class Q125 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int[] productExceptSelf(int[] nums) {

    }
}
}
