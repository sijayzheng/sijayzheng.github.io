package sijay.zheng.z.leetcode.easy;
/**
 题目253：解码字母到整数映射
<p>给你一个字符串<code>s</code>，它由数字（<code>'0'</code> - <code>'9'</code>）和<code>'#'</code>组成。我们希望按下述规则将<code>s</code>映射为一些小写英文字符：</p>

<ul>
	<li>字符（<code>'a'</code> - <code>'i'</code>）分别用（<code>'1'</code> -<code>'9'</code>）表示。</li>
	<li>字符（<code>'j'</code> - <code>'z'</code>）分别用（<code>'10#'</code>-<code>'26#'</code>）表示。</li>
</ul>

<p>返回映射之后形成的新字符串。</p>

<p>题目数据保证映射始终唯一。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<strong>输入：</strong>s = "10#11#12"
<strong>输出：</strong>"jkab"
<strong>解释：</strong>"j" -&gt; "10#" , "k" -&gt; "11#" , "a" -&gt; "1" , "b" -&gt; "2".
</pre>

<p><strong>示例 2：</strong></p>

<pre>
<strong>输入：</strong>s = "1326#"
<strong>输出：</strong>"acz"
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>1 &lt;= s.length &lt;= 1000</code></li>
	<li><code>s[i]</code> 只包含数字（<code>'0'</code>-<code>'9'</code>）和<code>'#'</code>字符。</li>
	<li><code>s</code>是映射始终存在的有效字符串。</li>
</ul>

*/
 class Q253 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public String freqAlphabets(String s) {

    }
}
}
