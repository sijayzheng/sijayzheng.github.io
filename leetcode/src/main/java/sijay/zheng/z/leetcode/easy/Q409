package sijay.zheng.z.leetcode.easy;
/**
 题目409：拆分数位后四位数字的最小和
<p>给你一个四位<strong>正</strong>整数<code>num</code>。请你使用 <code>num</code>中的 <strong>数位</strong> ，将<code>num</code>拆成两个新的整数<code>new1</code>和<code>new2</code>。<code>new1</code> 和<code>new2</code>中可以有<strong>前导 0</strong>，且<code>num</code>中 <strong>所有</strong>数位都必须使用。</p>

<ul>
	<li>比方说，给你<code>num = 2932</code>，你拥有的数位包括：两个<code>2</code>，一个<code>9</code>和一个<code>3</code>。一些可能的<code>[new1, new2]</code>数对为<code>[22, 93]</code>，<code>[23, 92]</code>，<code>[223, 9]</code> 和<code>[2, 329]</code>。</li>
</ul>

<p>请你返回可以得到的<code>new1</code>和 <code>new2</code>的 <strong>最小</strong>和。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre><b>输入：</b>num = 2932
<b>输出：</b>52
<b>解释：</b>可行的 [new1, new2] 数对为 [29, 23] ，[223, 9] 等等。
最小和为数对 [29, 23] 的和：29 + 23 = 52 。
</pre>

<p><strong>示例 2：</strong></p>

<pre><b>输入：</b>num = 4009
<b>输出：</b>13
<b>解释：</b>可行的 [new1, new2] 数对为 [0, 49] ，[490, 0] 等等。
最小和为数对 [4, 9] 的和：4 + 9 = 13 。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>1000 &lt;= num &lt;= 9999</code></li>
</ul>

*/
 class Q409 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int minimumSum(int num) {

    }
}
}
