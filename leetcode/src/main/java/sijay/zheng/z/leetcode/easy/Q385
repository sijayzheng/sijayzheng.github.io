package sijay.zheng.z.leetcode.easy;
/**
 题目385：使每位学生都有座位的最少移动次数
<p>一个房间里有 <code>n</code>个座位和 <code>n</code>名学生，房间用一个数轴表示。给你一个长度为 <code>n</code>的数组<code>seats</code>，其中<code>seats[i]</code> 是第 <code>i</code>个座位的位置。同时给你一个长度为 <code>n</code>的数组<code>students</code>，其中<code>students[j]</code>是第 <code>j</code>位学生的位置。</p>

<p>你可以执行以下操作任意次：</p>

<ul>
	<li>增加或者减少第<code>i</code>位学生的位置，每次变化量为 <code>1</code>（也就是将第 <code>i</code>位学生从位置 <code>x</code>移动到 <code>x + 1</code>或者 <code>x - 1</code>）</li>
</ul>

<p>请你返回使所有学生都有座位坐的 <strong>最少移动次数</strong>，并确保没有两位学生的座位相同。</p>

<p>请注意，初始时有可能有多个座位或者多位学生在 <strong>同一</strong>位置。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre><b>输入：</b>seats = [3,1,5], students = [2,7,4]
<b>输出：</b>4
<b>解释：</b>学生移动方式如下：
- 第一位学生从位置 2 移动到位置 1 ，移动 1 次。
- 第二位学生从位置 7 移动到位置 5 ，移动 2 次。
- 第三位学生从位置 4 移动到位置 3 ，移动 1 次。
总共 1 + 2 + 1 = 4 次移动。
</pre>

<p><strong>示例 2：</strong></p>

<pre><b>输入：</b>seats = [4,1,5,9], students = [1,3,2,6]
<b>输出：</b>7
<strong>解释：</strong>学生移动方式如下：
- 第一位学生不移动。
- 第二位学生从位置 3 移动到位置 4 ，移动 1 次。
- 第三位学生从位置 2 移动到位置 5 ，移动 3 次。
- 第四位学生从位置 6 移动到位置 9 ，移动 3 次。
总共 0 + 1 + 3 + 3 = 7 次移动。
</pre>

<p><strong>示例 3：</strong></p>

<pre><b>输入：</b>seats = [2,2,6,6], students = [1,3,2,6]
<b>输出：</b>4
<b>解释：</b>学生移动方式如下：
- 第一位学生从位置 1 移动到位置 2 ，移动 1 次。
- 第二位学生从位置 3 移动到位置 6 ，移动 3 次。
- 第三位学生不移动。
- 第四位学生不移动。
总共 1 + 3 + 0 + 0 = 4 次移动。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>n == seats.length == students.length</code></li>
	<li><code>1 &lt;= n &lt;= 100</code></li>
	<li><code>1 &lt;= seats[i], students[j] &lt;= 100</code></li>
</ul>

*/
 class Q385 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int minMovesToSeat(int[] seats, int[] students) {

    }
}
}
