package sijay.zheng.z.leetcode.easy;
/**
 题目412：统计数组中相等且可以被整除的数对
<p>给你一个下标从 <strong>0</strong>开始长度为 <code>n</code>的整数数组<code>nums</code>和一个整数<code>k</code>，请你返回满足<code>0 &lt;= i &lt; j &lt; n</code>，<code>nums[i] == nums[j]</code> 且<code>(i * j)</code>能被<code>k</code>整除的数对<code>(i, j)</code>的<strong>数目</strong>。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre><b>输入：</b>nums = [3,1,2,2,2,1,3], k = 2
<b>输出：</b>4
<strong>解释：</strong>
总共有 4 对数符合所有要求：
- nums[0] == nums[6] 且 0 * 6 == 0 ，能被 2 整除。
- nums[2] == nums[3] 且 2 * 3 == 6 ，能被 2 整除。
- nums[2] == nums[4] 且 2 * 4 == 8 ，能被 2 整除。
- nums[3] == nums[4] 且 3 * 4 == 12 ，能被 2 整除。
</pre>

<p><strong>示例 2：</strong></p>

<pre><b>输入：</b>nums = [1,2,3,4], k = 1
<b>输出：</b>0
<b>解释：</b>由于数组中没有重复数值，所以没有数对 (i,j) 符合所有要求。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>1 &lt;= nums.length &lt;= 100</code></li>
	<li><code>1 &lt;= nums[i], k &lt;= 100</code></li>
</ul>

*/
 class Q412 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int countPairs(int[] nums, int k) {

    }
}
}
