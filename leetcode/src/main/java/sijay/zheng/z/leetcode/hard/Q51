package sijay.zheng.z.leetcode.hard;
/**
 题目51：按要求补齐数组
<p>给定一个已排序的正整数数组 <code>nums</code><em>，</em>和一个正整数<code>n</code><em> 。</em>从<code>[1, n]</code>区间内选取任意个数字补充到nums中，使得<code>[1, n]</code>区间内的任何数字都可以用nums中某几个数字的和来表示。</p>

<p>请返回 <em>满足上述要求的最少需要补充的数字个数</em>。</p>

<p></p>

<p><strong>示例1:</strong></p>

<pre>
<strong>输入: </strong>nums = <code>[1,3]</code>, n = <code>6</code>
<strong>输出: </strong>1 
<strong>解释:</strong>
根据 nums里现有的组合<code>[1], [3], [1,3]</code>，可以得出<code>1, 3, 4</code>。
现在如果我们将<code>2</code>添加到nums 中，组合变为: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>。
其和可以表示数字<code>1, 2, 3, 4, 5, 6</code>，能够覆盖<code>[1, 6]</code>区间里所有的数。
所以我们最少需要添加一个数字。</pre>

<p><strong>示例 2:</strong></p>

<pre>
<strong>输入: </strong>nums = <code>[1,5,10]</code>, n = <code>20</code>
<strong>输出:</strong> 2
<strong>解释: </strong>我们需要添加<code>[2,4]</code>。
</pre>

<p><strong>示例3:</strong></p>

<pre>
<strong>输入: </strong>nums = <code>[1,2,2]</code>, n = <code>5</code>
<strong>输出:</strong> 0
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>1 &lt;= nums.length &lt;= 1000</code></li>
	<li><code>1 &lt;= nums[i] &lt;= 10<sup>4</sup></code></li>
	<li><code>nums</code>按 <strong>升序排列</strong></li>
	<li><code>1 &lt;= n &lt;= 2<sup>31</sup>- 1</code></li>
</ul>

*/
 class Q51 {public static void main(String[] args) {Solution solution=new Solution();}
static class Solution {
    public int minPatches(int[] nums, int n) {

    }
}
}
