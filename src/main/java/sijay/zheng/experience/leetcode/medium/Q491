package sijay.zheng.experience.leetcode.medium;
/**
 题目491：拼车
<p>车上最初有<code>capacity</code>个空座位。车<strong>只能</strong>向一个方向行驶（也就是说，<strong>不允许掉头或改变方向</strong>）</p>

<p>给定整数<code>capacity</code>和一个数组 <code>trips</code> , <code>trip[i] = [numPassengers<sub>i</sub>, from<sub>i</sub>, to<sub>i</sub>]</code>表示第 <code>i</code> 次旅行有<code>numPassengers<sub>i</sub></code>乘客，接他们和放他们的位置分别是<code>from<sub>i</sub></code>和<code>to<sub>i</sub></code>。这些位置是从汽车的初始位置向东的公里数。</p>

<p>当且仅当你可以在所有给定的行程中接送所有乘客时，返回<code>true</code>，否则请返回 <code>false</code>。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<strong>输入：</strong>trips = [[2,1,5],[3,3,7]], capacity = 4
<strong>输出：</strong>false
</pre>

<p><strong>示例 2：</strong></p>

<pre>
<strong>输入：</strong>trips = [[2,1,5],[3,3,7]], capacity = 5
<strong>输出：</strong>true
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>1 &lt;= trips.length &lt;= 1000</code></li>
	<li><code>trips[i].length == 3</code></li>
	<li><code>1 &lt;= numPassengers<sub>i</sub>&lt;= 100</code></li>
	<li><code>0 &lt;= from<sub>i</sub>&lt; to<sub>i</sub>&lt;= 1000</code></li>
	<li><code>1 &lt;= capacity &lt;= 10<sup>5</sup></code></li>
</ul>

*/
 class Q491 {public static void main(String[] args) {}
class Solution {
    public boolean carPooling(int[][] trips, int capacity) {

    }
}
}