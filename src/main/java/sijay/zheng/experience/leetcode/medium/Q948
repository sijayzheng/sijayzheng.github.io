package sijay.zheng.experience.leetcode.medium;
/**
 题目948：最小差值平方和
<p>给你两个下标从 <strong>0</strong>开始的整数数组<code>nums1</code> 和<code>nums2</code>，长度为<code>n</code>。</p>

<p>数组<code>nums1</code> 和<code>nums2</code>的 <strong>差值平方和</strong>定义为所有满足<code>0 &lt;= i &lt; n</code>的<code>(nums1[i] - nums2[i])<sup>2</sup></code>之和。</p>

<p>同时给你两个正整数<code>k1</code> 和<code>k2</code>。你可以将<code>nums1</code>中的任意元素<code>+1</code> 或者<code>-1</code>至多<code>k1</code>次。类似的，你可以将<code>nums2</code>中的任意元素<code>+1</code> 或者<code>-1</code>至多<code>k2</code>次。</p>

<p>请你返回修改数组<em></em><code>nums1</code><em></em>至多<em></em><code>k1</code>次且修改数组<em></em><code>nums2</code>至多 <code>k2</code><em></em>次后的最小<strong>差值平方和</strong>。</p>

<p><strong>注意：</strong>你可以将数组中的元素变成<strong>负</strong>整数。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<pre><b>输入：</b>nums1 = [1,2,3,4], nums2 = [2,10,20,19], k1 = 0, k2 = 0
<b>输出：</b>579
<b>解释：</b>nums1 和 nums2 中的元素不能修改，因为 k1 = 0 和 k2 = 0 。
差值平方和为：(1 - 2)<sup>2 </sup>+ (2 - 10)<sup>2 </sup>+ (3 - 20)<sup>2 </sup>+ (4 - 19)<sup>2</sup>= 579 。
</pre>

<p><strong>示例 2：</strong></p>

<pre><b>输入：</b>nums1 = [1,4,10,12], nums2 = [5,8,6,9], k1 = 1, k2 = 1
<b>输出：</b>43
<b>解释：</b>一种得到最小差值平方和的方式为：
- 将 nums1[0] 增加一次。
- 将 nums2[2] 增加一次。
最小差值平方和为：
(2 - 5)<sup>2 </sup>+ (4 - 8)<sup>2 </sup>+ (10 - 7)<sup>2 </sup>+ (12 - 9)<sup>2</sup>= 43 。
注意，也有其他方式可以得到最小差值平方和，但没有得到比 43 更小答案的方案。</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>n == nums1.length == nums2.length</code></li>
	<li><code>1 &lt;= n &lt;= 10<sup>5</sup></code></li>
	<li><code>0 &lt;= nums1[i], nums2[i] &lt;= 10<sup>5</sup></code></li>
	<li><code>0 &lt;= k1, k2 &lt;= 10<sup>9</sup></code></li>
</ul>

*/
 class Q948 {public static void main(String[] args) {}
static class Solution {
    public long minSumSquareDiff(int[] nums1, int[] nums2, int k1, int k2) {

    }
}
}