package sijay.zheng.experience.leetcode.medium;
/**
 题目923：设计一个 ATM 机器
<p>一个 ATM 机器，存有<code>5</code>种面值的钞票：<code>20</code>，<code>50</code>，<code>100</code>，<code>200</code>和<code>500</code>美元。初始时，ATM 机是空的。用户可以用它存或者取任意数目的钱。</p>

<p>取款时，机器会优先取 <b>较大</b>数额的钱。</p>

<ul>
	<li>比方说，你想取<code>$300</code>，并且机器里有<code>2</code>张 <code>$50</code>的钞票，<code>1</code>张<code>$100</code>的钞票和<code>1</code>张<code>$200</code>的钞票，那么机器会取出<code>$100</code> 和<code>$200</code>的钞票。</li>
	<li>但是，如果你想取<code>$600</code>，机器里有<code>3</code>张<code>$200</code>的钞票和<code>1</code>张<code>$500</code>的钞票，那么取款请求会被拒绝，因为机器会先取出<code>$500</code>的钞票，然后无法取出剩余的<code>$100</code>。注意，因为有<code>$500</code>钞票的存在，机器<strong>不能</strong>取<code>$200</code>的钞票。</li>
</ul>

<p>请你实现 ATM 类：</p>

<ul>
	<li><code>ATM()</code>初始化 ATM 对象。</li>
	<li><code>void deposit(int[] banknotesCount)</code>分别存入<code>$20</code>，<code>$50</code>，<code>$100</code>，<code>$200</code>和<code>$500</code>钞票的数目。</li>
	<li><code>int[] withdraw(int amount)</code>返回一个长度为<code>5</code>的数组，分别表示<code>$20</code>，<code>$50</code>，<code>$100</code>，<code>$200</code>和<code>$500</code>钞票的数目，并且更新 ATM 机里取款后钞票的剩余数量。如果无法取出指定数额的钱，请返回<code>[-1]</code>（这种情况下 <strong>不</strong>取出任何钞票）。</li>
</ul>

<p></p>

<p><strong>示例 1：</strong></p>

<pre>
<strong>输入：</strong>
["ATM", "deposit", "withdraw", "deposit", "withdraw", "withdraw"]
[[], [[0,0,1,2,1]], [600], [[0,1,0,1,1]], [600], [550]]
<strong>输出：</strong>
[null, null, [0,0,1,0,1], null, [-1], [0,1,0,0,1]]

<strong>解释：</strong>
ATM atm = new ATM();
atm.deposit([0,0,1,2,1]); // 存入 1 张 $100 ，2 张 $200 和 1 张 $500 的钞票。
atm.withdraw(600);        // 返回 [0,0,1,0,1] 。机器返回 1 张 $100 和 1 张 $500 的钞票。机器里剩余钞票的数量为 [0,0,0,2,0] 。
atm.deposit([0,1,0,1,1]); // 存入 1 张 $50 ，1 张 $200 和 1 张 $500 的钞票。
                          // 机器中剩余钞票数量为 [0,1,0,3,1] 。
atm.withdraw(600);        // 返回 [-1] 。机器会尝试取出 $500 的钞票，然后无法得到剩余的 $100 ，所以取款请求会被拒绝。
                          // 由于请求被拒绝，机器中钞票的数量不会发生改变。
atm.withdraw(550);        // 返回 [0,1,0,0,1] ，机器会返回 1 张 $50 的钞票和 1 张 $500 的钞票。</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>banknotesCount.length == 5</code></li>
	<li><code>0 &lt;= banknotesCount[i] &lt;= 10<sup>9</sup></code></li>
	<li><code>1 &lt;= amount &lt;= 10<sup>9</sup></code></li>
	<li><strong>总共</strong>最多有<code>5000</code>次<code>withdraw</code> 和<code>deposit</code>的调用。</li>
	<li><span style="">函数 </span><code>withdraw</code> 和<code>deposit</code>至少各有 <strong>一次</strong>调用。</li>
</ul>

*/
 class Q923 {public static void main(String[] args) {}
class ATM {

    public ATM() {

    }
    
    public void deposit(int[] banknotesCount) {

    }
    
    public int[] withdraw(int amount) {

    }
}

/**
Your ATM object will be instantiated and called as such:
ATM obj = new ATM();
obj.deposit(banknotesCount);
int[] param_2 = obj.withdraw(amount);
 */
}