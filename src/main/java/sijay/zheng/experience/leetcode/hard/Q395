package sijay.zheng.experience.leetcode.hard;
/**
 题目395：检查是否有合法括号字符串路径
<p>一个括号字符串是一个 <strong>非空</strong>且只包含<code>'('</code>和<code>')'</code>的字符串。如果下面<strong>任意</strong>条件为<strong>真</strong>，那么这个括号字符串就是<strong>合法的</strong>。</p>

<ul>
	<li>字符串是<code>()</code>。</li>
	<li>字符串可以表示为<code>AB</code>（<code>A</code>连接<code>B</code>），<code>A</code> 和<code>B</code>都是合法括号序列。</li>
	<li>字符串可以表示为<code>(A)</code>，其中<code>A</code>是合法括号序列。</li>
</ul>

<p>给你一个<code>m x n</code>的括号网格图矩阵<code>grid</code>。网格图中一个<strong>合法括号路径</strong>是满足以下所有条件的一条路径：</p>

<ul>
	<li>路径开始于左上角格子<code>(0, 0)</code>。</li>
	<li>路径结束于右下角格子<code>(m - 1, n - 1)</code>。</li>
	<li>路径每次只会向 <strong>下</strong>或者向 <strong>右</strong>移动。</li>
	<li>路径经过的格子组成的括号字符串是<strong>合法</strong>的。</li>
</ul>

<p>如果网格图中存在一条 <strong>合法括号路径</strong>，请返回<code>true</code>，否则返回<code>false</code>。</p>

<p></p>

<p><strong>示例 1：</strong></p>

<p><img alt="" src="https://assets.leetcode.com/uploads/2022/03/15/example1drawio.png" style="width: 521px; height: 300px;" /></p>

<pre>
<b>输入：</b>grid = [["(","(","("],[")","(",")"],["(","(",")"],["(","(",")"]]
<b>输出：</b>true
<b>解释：</b>上图展示了两条路径，它们都是合法括号字符串路径。
第一条路径得到的合法字符串是 "()(())" 。
第二条路径得到的合法字符串是 "((()))" 。
注意可能有其他的合法括号字符串路径。
</pre>

<p><strong>示例 2：</strong></p>

<p><img alt="" src="https://assets.leetcode.com/uploads/2022/03/15/example2drawio.png" style="width: 165px; height: 165px;" /></p>

<pre>
<b>输入：</b>grid = [[")",")"],["(","("]]
<b>输出：</b>false
<b>解释：</b>两条可行路径分别得到 "))(" 和 ")((" 。由于它们都不是合法括号字符串，我们返回 false 。
</pre>

<p></p>

<p><strong>提示：</strong></p>

<ul>
	<li><code>m == grid.length</code></li>
	<li><code>n == grid[i].length</code></li>
	<li><code>1 &lt;= m, n &lt;= 100</code></li>
	<li><code>grid[i][j]</code>要么是<code>'('</code>，要么是<code>')'</code> 。</li>
</ul>

*/
 class Q395 {public static void main(String[] args) {}
static class Solution {
    public boolean hasValidPath(char[][] grid) {

    }
}
}